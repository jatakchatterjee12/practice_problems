//User function template for C++

**************************Approach-1************************************
class Solution {
public:
    vector<int> factorial(int N){
        vector<int> ans(1,1);
        
        while(N>1){
            
            int carry = 0, res, size = ans.size();
            
            for(int i=0; i < size; i++){
                
                res = (ans[i] * N) + carry;
                ans[i] = res % 10;
                carry = res / 10;
            }
            
            while(carry){
                ans.push_back(carry%10);
                carry /= 10;
            }
            
            N--;
        }
        
         reverse(ans.begin(), ans.end());
         return ans;
    }
};

**************************Approach-2************************************
//User function template for C++

class Solution {
public:
    void multiply(vector<int> &arr, int &size, int multiplier){
        
        int carry = 0;
        for(int i=0;i<size;i++){
            int res = arr[i] * multiplier + carry;
            arr[i] = res%10;
            carry = res/10;
        }
        
        while(carry){
            arr[size] = carry%10;
            size++;
            carry = carry/10;
        }
        
    }
    vector<int> factorial(int N){
        // code here
        
        vector<int> arr(10000,0);
        arr[0] = 1;
        int size = 1;
        
        for(int multiplier = 2; multiplier <= N; multiplier++){
            multiply(arr,size,multiplier);
        }
        
        vector<int> result;
        for(int i=size-1; i>=0; i--){
            result.push_back(arr[i]);
        }
        return result;
    }
};
